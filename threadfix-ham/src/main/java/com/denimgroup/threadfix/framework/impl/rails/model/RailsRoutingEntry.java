package com.denimgroup.threadfix.framework.impl.rails.model;

import com.denimgroup.threadfix.framework.impl.rails.routeParsing.RailsAbstractParameter;
import com.denimgroup.threadfix.framework.impl.rails.routeParsing.RailsAbstractRoutingDescriptor;

import java.util.Collection;

public interface RailsRoutingEntry {

    void addChildEntry(RailsRoutingEntry child);
    void removeChildEntry(RailsRoutingEntry child);
    Collection<RailsRoutingEntry> getChildren();
    void setParent(RailsRoutingEntry parent);
    RailsRoutingEntry getParent();

    void onToken(int type, int lineNumber, String stringValue);
    void onParameter(String name, String value, RouteParameterValueType parameterType);
    void onInitializerParameter(String name, String value, RouteParameterValueType parameterType);

    void onBegin(String identifier);
    void onEnd();

    String getPrimaryPath(); // The main path for this entry that sub-routes will generally be relative to
    Collection<PathHttpMethod> getPaths(); // All paths generated by this entry (NOT children)
    String getControllerName();
    String getModule();

    /**
     * @return A set of RouteShorthand implementations that can be used when parsing this route entry.
     */
    Collection<RouteShorthand> getSupportedShorthands();

    /**
     * @return Generates a deep clone of the current entry, duplicating child entries while the clone shares the original parent.
     */
    RailsRoutingEntry cloneEntry();
}
